//  Created by RAJU MOLLA on 24/12/22.

#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;


// #define int long long
//const int N = 1e5+9;
//int arr[N];
int leftOccur(vector<int>&v, int n, int x){
    int l = 0, r = n-1;
    int ans = -1;
    while(l<=r){
        int mid = (l+r)/2;
        if(v[mid]==x){
            ans = mid;
            r = mid-1;
        }
        else if(v[mid]<x){
            l = mid+1;
        }
        else{
            r = mid-1;
        }
    }
    return ans;
}
int rightOccur(vector<int>&v, int n, int x){
    int l = 0, r = n-1;
    int ans =-1;
    while(l<=r){
        int mid = (l+r)/2;
        if(v[mid]==x){
            ans = mid;
            l = mid+1;
        }
        else if(v[mid]<x){
            l = mid+1;
        }
        else{
            r = mid-1;
        }
    }
    return ans;
}

void solve(vector<int>&v, int n, int x){
    int a = leftOccur(v, n, x);
    int b = rightOccur(v,n,x);
    cout << (abs(a-b)+1) << '\n';
    
}

int32_t main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    vector<int>v({1,2,3,4,4,4,4,5});
    int x = 4;
    solve(v,v.size(),x);
  

}
